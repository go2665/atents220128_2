//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerTankActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerTankActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""cc060658-5fc3-4351-9435-fa3fa9b6dabf"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""e8d53457-708b-4aa9-aa45-4bfcb662e207"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""0b53bb14-daea-45f1-b94d-d0a3a4cd38a9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FireNormal"",
                    ""type"": ""Button"",
                    ""id"": ""440b4202-1102-4bd6-b26d-f5f730f7a461"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireSpecial"",
                    ""type"": ""Button"",
                    ""id"": ""787660e3-d050-4ed8-9930-eda87dd5d96a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShortCut01"",
                    ""type"": ""Button"",
                    ""id"": ""bc404422-b5fc-40c2-b31c-bad37b9a6886"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShortCut02"",
                    ""type"": ""Button"",
                    ""id"": ""d00f6c62-6436-43c9-9534-b6ae8416dc7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""7c6a5d5e-e972-4a7c-86f8-9405eb185e74"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ad36949f-b900-4f76-bb72-7cd888ae3e7d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b5ec263d-5d35-42a6-9bf6-6cbc477d957e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""56401008-370e-444d-a07a-5c7095e95e26"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fbb74f15-53ac-45cd-a558-4b977ac5d39f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""55287eb0-3872-4889-922d-738f884ed7c5"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00ef91c0-8a77-41ea-8036-e7047a09f47b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""FireNormal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21e732a0-1948-4865-b045-becf9553832a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""FireSpecial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""266914d3-e297-43a8-8ef0-e5fdaf45bd18"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""ShortCut01"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""108465ef-a7e4-4e00-9865-e54094f628d3"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""ShortCut02"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_FireNormal = m_Player.FindAction("FireNormal", throwIfNotFound: true);
        m_Player_FireSpecial = m_Player.FindAction("FireSpecial", throwIfNotFound: true);
        m_Player_ShortCut01 = m_Player.FindAction("ShortCut01", throwIfNotFound: true);
        m_Player_ShortCut02 = m_Player.FindAction("ShortCut02", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_FireNormal;
    private readonly InputAction m_Player_FireSpecial;
    private readonly InputAction m_Player_ShortCut01;
    private readonly InputAction m_Player_ShortCut02;
    public struct PlayerActions
    {
        private @PlayerTankActions m_Wrapper;
        public PlayerActions(@PlayerTankActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @FireNormal => m_Wrapper.m_Player_FireNormal;
        public InputAction @FireSpecial => m_Wrapper.m_Player_FireSpecial;
        public InputAction @ShortCut01 => m_Wrapper.m_Player_ShortCut01;
        public InputAction @ShortCut02 => m_Wrapper.m_Player_ShortCut02;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @FireNormal.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFireNormal;
                @FireNormal.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFireNormal;
                @FireNormal.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFireNormal;
                @FireSpecial.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFireSpecial;
                @FireSpecial.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFireSpecial;
                @FireSpecial.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFireSpecial;
                @ShortCut01.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShortCut01;
                @ShortCut01.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShortCut01;
                @ShortCut01.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShortCut01;
                @ShortCut02.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShortCut02;
                @ShortCut02.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShortCut02;
                @ShortCut02.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShortCut02;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @FireNormal.started += instance.OnFireNormal;
                @FireNormal.performed += instance.OnFireNormal;
                @FireNormal.canceled += instance.OnFireNormal;
                @FireSpecial.started += instance.OnFireSpecial;
                @FireSpecial.performed += instance.OnFireSpecial;
                @FireSpecial.canceled += instance.OnFireSpecial;
                @ShortCut01.started += instance.OnShortCut01;
                @ShortCut01.performed += instance.OnShortCut01;
                @ShortCut01.canceled += instance.OnShortCut01;
                @ShortCut02.started += instance.OnShortCut02;
                @ShortCut02.performed += instance.OnShortCut02;
                @ShortCut02.canceled += instance.OnShortCut02;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnFireNormal(InputAction.CallbackContext context);
        void OnFireSpecial(InputAction.CallbackContext context);
        void OnShortCut01(InputAction.CallbackContext context);
        void OnShortCut02(InputAction.CallbackContext context);
    }
}
